version: 1.0
runtime: nodejs22

build:
  commands:
    pre-build:
      - rm -rf node_modules package-lock.json
      - npm install --include=dev
    build:
      - npm ci --include=dev
      - npx medusa build
      - echo ">>> Admin build output <<<"
      - ls -R .medusa/server/public/admin || echo "— no admin folder found —"
      - cp medusa-config.js .medusa/server/medusa-config.js
      - npm install --production --prefix .medusa/server

run:
  # Tell App Runner which port your app listens on, and which env var to use
  network:
    port: 8080
    env: MEDUSA_PORT

  # HEALTH CHECK: use /health instead of /
  health-check:
    path: /health
    interval: 10
    timeout: 5
    healthy-threshold: 1
    unhealthy-threshold: 5

  # Start command – your compiled server
  command: "npm run start --prefix .medusa/server"

  # Runtime env
  env:
    - name: NODE_ENV
      value: production
    - name: MEDUSA_PORT
      value: "8080"

    # DB (consider sslmode=require once certs are set up)
    - name: DATABASE_URL
      value: "postgres://postgres:E_b09.lgR@database-1.cjuao6qq8txz.eu-central-1.rds.amazonaws.com:5432/database-1?sslmode=no-verify"

    - name: JWT_SECRET
      value: "4k2f6b1c5d3a837e5c0d2b8e6f2a3d8c"
    - name: COOKIE_SECRET
      value: "8844c2ef3f0ecfeeed5afe630c2665cb07afabf6cae5adfeb9f2ec02b9cb74a7"

    - name: STORE_CORS
      value: "https://lykosmanufacture.com"

    # S3 — these won’t break deployment if IAM role is attached correctly.
    # If you DON'T attach an IAM role, you must also set ACCESS KEY envs here.
    - name: S3_BUCKET
      value: "medusa-s3-bucket-lykos"
    - name: S3_REGION
      value: "eu-central-1"
    - name: S3_ENDPOINT
      value: ""
    # Usually optional; Medusa builds file URLs itself. Safe to keep or remove.
    - name: S3_FILE_URL
      value: "https://medusa-s3-bucket-lykos.s3.eu-central-1.amazonaws.com"

